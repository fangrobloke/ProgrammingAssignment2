install.packages("rmarkdown")
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm (1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_data)
sum(my_na)
my_data
0/0
Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2)
names(vect2) <- c("foo", "bar", "norf")
identical("vect", "vect2")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5).
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(my_matrix)
matrix(my_matrix2)
matrix(my_matrix2)
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patient <- C("Biil", "Gina", "Kelly", "SEan")
patient <- c("Biil", "Gina", "Kelly", "SEan")
patients <- c("Biil", "Gina", "Kelly", "SEan")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(my_matrix,patients)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
==
1==1
TRUE==TRUE
(FALSE==TRUE)==TRUE
(FALSE == TRUE) == FALSE
6==7
6 < 7
10=<10
12=<10
10<=10
5!==7
5 !== 7
5==!7
5!=7
5==7
5 == 7
5 == 7
5 == 7
-5 == 7
5==7
!5==7
library(swirl)
swirl()
library(swirl)
swirl()
Sys.Date()
mean(c(2, 4, 5))
submit()
x
mean(c(2, 4, 5))
library("swirl")
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
: t2 <- as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class()
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
setwd("C:\Users\Wutdy\Desktop\repro2")
ls()
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("gridExtra")
knitr::opts_chunk$set(echo = TRUE, results = "asis")
source("ProgrammingAssignment2/cachematrix.R")
setwd()
setwd(C:\Users\Wutdy\Desktop\r3\ProgrammingAssignment2)
setwd("C:\Users\Wutdy\Desktop\r3\ProgrammingAssignment2")
setwd('C:\Users\Wutdy\Desktop\r3\ProgrammingAssignment2')
setwd("C:\Users\Wutdy\\Desktop\\r3\\ProgrammingAssignment2")
setwd('C:\\Users\\Wutdy\\Desktop\\r3\\ProgrammingAssignment2')
source("ProgrammingAssignment2/cachematrix.R")
source("cachematrix.R")
my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
my_matrix$get()
my_matrix$getinverse()
cacheSolve(my_matrix)
cacheSolve(my_matrix)
getting cached data
cacheSolve(my_matrix)
my_matrix$getInverse()
getting cached data
my_matrix$getInverse()
my_matrix$set(matrix(c(2, 2, 1, 4), 2, 2))
my_matrix$get()
my_matrix$getInverse()
cacheSolve(my_matrix)
cacheSolve(my_matrix)
my_matrix$getInverse()
peter <- open.account(100)
install.packages(peter)
open.account <- function(total) {
list(
deposit = function(amount) {
if(amount <= 0)
stop("Deposits must be positive!\n")
total <<- total + amount
cat(amount, "deposited.  Your balance is", total, "\n\n")
},
withdraw = function(amount) {
if(amount > total)
stop("You don't have that much money!\n")
total <<- total - amount
cat(amount, "withdrawn.  Your balance is", total, "\n\n")
},
balance = function() {
cat("Your balance is", total, "\n\n")
}
)
}
peter <- open.account(100)
mm <- open.account(200)
peter$withdraw(30)
peter$balance()
mm$balance()
peter$deposit(50)
peter$balance()
peter$withdraw(500)
mm$balance()
mm$withdraw(12)
mm$balance()
peter$balance()
